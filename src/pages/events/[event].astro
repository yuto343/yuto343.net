---
import { useConstants } from "../../libs/use-constants";
import { FONT_SIZE, COLOR, SPACING } from "../../constants";
import { CollectionEntry, getCollection } from "astro:content";
import { formatDate } from "../../libs/date";
import Header from "../../components/shared/header.astro";
import Layout from "../../layouts/layout.astro";
import Draft from "../../components/event/draft.astro";

export async function getStaticPaths() {
  const events = await getCollection("events");
  return events.map((event) => ({
    params: { event: event.slug },
    props: { event },
  }));
}
interface Props {
  event: CollectionEntry<"events">;
}

const { event } = Astro.props;
const { Content } = await event.render();
---

<Layout>
  <div>
  {
    event.data.draft ? (
      <Draft />
    ) : (
        <Header />
        <div>
          <h1>{event.data.title}</h1>

            <time>{formatDate(event.data.date)}</time>
            {event.data.at && <p>@{event.data.at}</p>}
        </div>
        <div class='contentContainer'>
          <Content />
        </div>
    )
  }
  </div>
</Layout>

<style define:vars={useConstants({ FONT_SIZE, COLOR, SPACING })}>

  time {
    font-size: var(--FONT_SIZE_PX12);
    text-align: center;
    display: block;
    color: var(--COLOR_GRAY600);
  }
  h1 {
    font-size: var(--FONT_SIZE_PX20);
    font-weight: normal;
    text-align: center;
    margin: 0;
  }
  
  p {
    color: var(--COLOR_GRAY600);
    text-align: center;
    margin: 0 ;
    font-size: var(--FONT_SIZE_PX12);
  }
  .contentContainer {
    width: 90%;
    max-width: 600px;
    margin: 0 auto;
  }

  .contentContainer :global(p)  {
  }
  .contentContainer :global(a) {
    color: var(--COLOR_GRAY600);
  }
  .contentContainer :global(a:visited ){
    color: var(--COLOR_GRAY600);
  }
  .contentContainer :global(a:hover) {
    color: var(--COLOR_GRAY500);
  }
</style>
